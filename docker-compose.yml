version: '3.6'
services:
  postgres:
    image: postgres:latest
    container_name: bdjuno-postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 60s
      interval: 10s
      retries: 10
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - APP_DB_USER=docker
      - APP_DB_PASS=docker
      - APP_DB_NAME=docker
    volumes:
      - ./database/schema:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  bdjuno:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        arch: x86_64 # update to aarch64 if you want to use that arch
    container_name: bdjuno
    depends_on:
      - "postgres"
    restart: always
    command: bdjuno start --home /bdjuno/.bdjuno
    volumes:
      - .bdjuno:/bdjuno/.bdjuno

  hasura:
    build:
      context: .
      dockerfile: hasura.Dockerfile
    container_name: bdjuno-hasura-graphql-engine
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - "postgres"
    environment:
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      HASURA_GRAPHQL_DATABASE_URL: postgres://root:password@postgres:5432/root
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      ## set to true to enable debugging mode.
      HASURA_GRAPHQL_DEV_MODE: "false"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_METADATA_DIR: /hasura/metadata
      ## action url to refer to action API
      ACTION_BASE_URL: http://bdjuno:3000
